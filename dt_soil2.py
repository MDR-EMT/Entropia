# -*- coding: utf-8 -*-
"""DT_Soil2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/166SUMAS1Ahk1UAhmF3e2HmAVyqQHMZSO

## Modelo
"""

import pandas as pd
from sklearn.tree import DecisionTreeClassifier # Import Decision Tree Classifier
from sklearn.model_selection import train_test_split # Import train_test_split function
from sklearn import metrics #Import scikit-learn metrics module for accuracy calculation

col_names = ['Area','N','P205','K2SO4','CaO','MgO','Zn','Qfe','B','Rendimiento']
ds = pd.read_csv("soil_rendimiento_Interval.csv")
ds.columns = col_names
ds.head()

#split dataset in features and target variable
feature_cols = ['Area','N','P205','K2SO4','CaO','MgO','Zn','Qfe','B']
x = ds[feature_cols] # Features
y = ds.Rendimiento # Target variable
X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.1, random_state=1)

# Creacion DT
clf = DecisionTreeClassifier()

# Entrenamiento DT
clf = clf.fit(X_train,y_train)

# Predicción
y_pred = clf.predict(X_test)

# Acc
print("Accuracy:",metrics.accuracy_score(y_test, y_pred))

"""## Visualización"""

from sklearn.externals.six import StringIO  
from IPython.display import Image  
from sklearn.tree import export_graphviz
import pydotplus

dot_data = StringIO()
export_graphviz(clf, out_file=dot_data,  
                filled=True, rounded=True,
                special_characters=True, feature_names = feature_cols,class_names=['a','b','c','d','e','f','g','h','i'])
graph = pydotplus.graph_from_dot_data(dot_data.getvalue())  
graph.write_png('DT_SOIL.png')
Image(graph.create_png())